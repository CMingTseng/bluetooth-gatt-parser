plugins {
    id 'java'
    id 'groovy'
    id 'kotlin'
}

sourceSets {
    main.java.srcDirs = [ 'src/main/java','src/main/kotlin' ]
    main.kotlin.srcDirs = [ 'src/main/java','src/main/kotlin' ]
    main.resources.srcDirs = [ 'src/main/resources' ]
    test.java.srcDirs = [ 'src/test/java','src/test/kotlin' ]
    test.kotlin.srcDirs = [ 'src/test/java','src/test/kotlin' ]
    test.resources.srcDirs = [ 'src/main/resources','src/test/resources' ]
}

//TODO this section modify from GattRegistryGenerator.groovy (/src/main/script)
task GeneratorGattJson(group: "Generator", description: "GattRegistryGenerator Task") {
    doLast {
        generate("${this.projectDir.toString()}/src/main/resources/gatt/characteristic",
                "${this.project.buildDir.toString()}/generated-sources/groovy/gatt/characteristic/gatt_spec_registry.json")
        generate("${this.projectDir.toString()}/src/main/resources/gatt/service",
                "${this.project.buildDir.toString()}/generated-sources/groovy/gatt/service/gatt_spec_registry.json")
    }
}

static generate(String inputFolderName, String registryFileName) {
    final File registryFile = new File(registryFileName)
    registryFile.parentFile.mkdirs()
    registryFile.createNewFile()

    final File directory = new File(inputFolderName)
    final XmlParser parser = new XmlParser()
    parser.setFeature('http://apache.org/xml/features/disallow-doctype-decl', true)
    final def registry = new HashMap()
    directory.eachFileMatch(~/.*.xml/) { file ->
        def xml = parser.parse(file)
        def type = xml.attributes()['type'];
        if ("${type}.xml" != file.name) {
            throw new IllegalStateException(
                    "GATT registry generation failed. 'type' attribute ($type) does not match to its file name ($file.name)");
        }
        registry.put(xml.attributes()["uuid"], xml.attributes()["type"])
    }
    registryFile.write(new groovy.json.JsonBuilder( registry).toPrettyString())
}

dependencies {
    testImplementation 'junit:junit:4.+'
    implementation gradleApi()
    implementation localGroovy()
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.slf4j:slf4j-api:1.7.21"
    implementation "org.slf4j:slf4j-simple:1.7.21"
    implementation "com.thoughtworks.xstream:xstream:1.4.7"
    implementation "com.google.code.gson:gson:2.8.8"
    implementation "commons-beanutils:commons-beanutils:1.9.3"
    implementation "com.google.guava:guava:18.0"

    testImplementation  "org.mockito:mockito-all:1.10.19"
    testImplementation  "junit:junit:4.8.2"
    testImplementation  "org.powermock:powermock-module-junit4:1.7.3"
    testImplementation  "org.powermock:powermock-api-mockito:1.7.3"
}